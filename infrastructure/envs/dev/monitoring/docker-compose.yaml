version: '3.9'

services:

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "8080:8080"
    networks:
      - monitoring-network
    restart: unless-stopped
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      LOGGING_LEVEL_ROOT: 'DEBUG'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_SERVER_HOST}:${KAFKA_SERVER_PORT}
  mysql:
    image: mysql:9.0
    container_name: mysqldb
    ports:
      - "3316:3306"
    networks:
      - monitoring-network
    volumes:
      - './mysql/mysql-data:/var/lib/mysql'
      - './mysql/init.sql:/docker-entrypoint-initdb.d/init.sql'
    environment:
      MYSQL_ROOT_PASSWORD: mysql

  tempo:
    image: grafana/tempo:2.5.0
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - './tempo/tempo.yml:/etc/tempo.yaml:ro'
      - './tempo/tempo-data:/tmp/tempo'
    ports:
      - "3110:3100"
      - "9411:9411"
    networks:
      - monitoring-network

  loki:
    image: grafana/loki:3.0.1
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - monitoring-network
    
  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    ports:
      - "9090:9090"
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana:11.2.0
    volumes:
      - './grafana:/etc/grafana/provisioning/datasources:ro'
    ports:
      - "3000:3000"
    networks:
      - monitoring-network
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      
volumes:
  mysql-data:

networks:
  monitoring-network:
    external:
      name: dev-cluster-network