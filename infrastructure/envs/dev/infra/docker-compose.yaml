version: '3.9'

services:
  postgres:
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - dev-cluster-network
    volumes:
      - './postgres:/docker-entrypoint-initdb.d'
  kafka:
    image: apache/kafka:3.8.0
    hostname: broker
    restart: always
    ports:
      - "9092:9092"
      - "19092:19092"
    networks:
      - dev-cluster-network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

networks:
  dev-cluster-network:
    name: dev-cluster-network