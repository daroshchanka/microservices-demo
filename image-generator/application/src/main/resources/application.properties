spring.application.name=image-generator
server.port=${APP_PORT}

spring.threads.virtual.enabled=true
spring.kafka.bootstrap-servers=${KAFKA_SERVER_HOST}:${KAFKA_SERVER_PORT}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.servlet.multipart.max-file-size=128KB
spring.servlet.multipart.max-request-size=128KB
spring.servlet.multipart.resolve-lazily=false

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=image-generator
management.tracing.sampling.probability=1.0
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]

integration.documents.server=${INTEGRATION_DOCUMENTS_SERVER_HOST}:${INTEGRATION_DOCUMENTS_SERVER_PORT}