spring.application.name=image-generation-manager
server.port=${APP_PORT}
spring.datasource.url=jdbc:postgresql://${DATASOURCE_HOST}:${DATASOURCE_PORT}/image_generation_manager
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

dmax.openapi.dev-url=http://${APP_HOST}:${APP_PORT}
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true

spring.threads.virtual.enabled=true
spring.kafka.bootstrap-servers=${KAFKA_SERVER_HOST}:${KAFKA_SERVER_PORT}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.servlet.multipart.max-file-size=128KB
spring.servlet.multipart.max-request-size=128KB
spring.servlet.multipart.resolve-lazily=false

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=image-generation-manager
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${TEMPO_ZIPKIN_ENDPOINT}
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.zalando.logbook.Logbook=TRACE
logbook.write.max-body-size = 3000
logbook.exclude[0]=**/swagger-ui.html
logbook.exclude[1]=/actuator/**